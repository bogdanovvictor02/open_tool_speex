name: Cross-platform Build

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: write  # Required for creating releases
  packages: write  # Required for uploading artifacts

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        cache: true
    
    - name: Install SpeexDSP
      run: |
        sudo apt-get update
        sudo apt-get install -y libspeexdsp-dev pkg-config
    
    - name: Build for Linux
      run: go build -o speex-linux
    
    - name: Test Linux binary
      run: |
        ./speex-linux -help || true
        echo "Linux binary built successfully"
    
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: speex-linux
        path: speex-linux

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        cache: true
    
    - name: Install SpeexDSP
      run: |
        brew install speexdsp pkg-config
    
    - name: Build for macOS
      run: go build -o speex-macos
    
    - name: Test macOS binary
      run: |
        ./speex-macos -help || true
        echo "macOS binary built successfully"
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: speex-macos
        path: speex-macos

  build-windows:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
    
    - name: Install cross-compilation tools
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 pkg-config autotools-dev automake libtool
    
    - name: Build SpeexDSP for Windows
      run: |
        curl -L "https://downloads.xiph.org/releases/speex/speexdsp-1.2.1.tar.gz" -o speexdsp.tar.gz
        tar -xzf speexdsp.tar.gz
        cd speexdsp-1.2.1
        ./configure --host=x86_64-w64-mingw32 --prefix=/usr/x86_64-w64-mingw32 --enable-static --disable-shared --disable-examples
        make -j$(nproc)
        sudo make install
    
    - name: Build for Windows
      env:
        CGO_ENABLED: 1
        GOOS: windows
        GOARCH: amd64
        CC: x86_64-w64-mingw32-gcc
        CXX: x86_64-w64-mingw32-g++
        PKG_CONFIG_PATH: /usr/x86_64-w64-mingw32/lib/pkgconfig
      run: go build -ldflags="-s -w -extldflags=-static" -o speex.exe
    
    - name: Test Windows binary (using wine)
      run: |
        # Install wine for testing Windows binary on Linux
        sudo apt-get update
        sudo apt-get install -y wine
        wine --version
        # Test the binary (may fail but we can check if it exists)
        ls -la speex.exe
        file speex.exe
        echo "Windows binary built successfully"
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: speex-windows
        path: speex.exe

  create-release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          artifacts/speex-linux/speex-linux
          artifacts/speex-macos/speex-macos
          artifacts/speex-windows/speex.exe
        body: |
          ## Speex AEC Console Tool Release
          
          ### Features:
          - Echo Cancellation (AEC)
          - Noise Suppression (NS) 
          - Voice Activity Detection (VAD)
          - Automatic Gain Control (AGC)
          - Multiple processing modes (AEC-only, NS-only, NS-first, bypass)
          - Delay compensation support
          - Configurable NS parameters
          
          ### Downloads:
          - **speex-linux**: For Linux x64
          - **speex-macos**: For macOS (Intel/Apple Silicon)
          - **speex.exe**: For Windows x64
          
          ### Usage:
          ```bash
          # Basic usage
          ./speex -mic input.alaw -speaker reference.alaw -output clean.alaw
          
          # Show help
          ./speex -help
          ```
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
