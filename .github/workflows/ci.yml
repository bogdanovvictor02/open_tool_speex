name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GO_VERSION: '1.22'
  BINARY_NAME: open_tool_speex

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libspeexdsp-dev pkg-config

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install Task
      uses: arduino/setup-task@v1
      with:
        version: 3.x

    - name: Run tests
      run: |
        pwd
        ls -la
        task test

    - name: Run tests with coverage
      run: task test-coverage

    - name: Run linting
      run: task lint

    - name: Run vet
      run: task vet

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: success()
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    needs: test
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact_name: open_tool_speex-linux
          - os: macos-latest
            platform: macos
            artifact_name: open_tool_speex-macos
          - os: windows-latest
            platform: windows
            artifact_name: open_tool_speex.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libspeexdsp-dev pkg-config

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install speexdsp pkg-config

    - name: Install Task
      uses: arduino/setup-task@v1
      with:
        version: 3.x

    - name: Build
      run: |
        pwd
        ls -la
        task build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: build/${{ env.BINARY_NAME }}*

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libspeexdsp-dev pkg-config

    - name: Install Task
      uses: arduino/setup-task@v1
      with:
        version: 3.x

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: open_tool_speex-linux

    - name: Make binary executable
      run: chmod +x build/open_tool_speex-linux

    - name: Run integration tests
      run: task test-integration

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libspeexdsp-dev pkg-config

    - name: Run basic security checks
      run: |
        go vet ./...
        go fmt -d .
        if [ -n "$(go fmt -d .)" ]; then
          echo "Code is not formatted. Run 'go fmt ./...' to fix."
          exit 1
        fi

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libspeexdsp-dev pkg-config

    - name: Run dependency check
      run: |
        go mod download
        go mod verify
        go list -m all
